---
import {
  getCurrentLocale,
  getLocalePaths,
  locales,
  useTranslations,
} from "../i18n";

interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props;

const locale = getCurrentLocale(Astro);
const t = useTranslations(Astro);

const localeDescription =
  description ||
  t({
    de: "Willkommen bei den Bundesleistungszentren der Softwareentwicklung",
    en: "Welcome to the national centers of software development",
  });
---

<!doctype html>
<html lang={locale.lang} dir={locale.dir}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={localeDescription} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>BLZ IT{title ? ` | ${title}` : ""}</title>
    {
      getLocalePaths(Astro.url).map((props) => (
        <link
          rel="alternate"
          hreflang={locales[props.lang].lang || props.lang}
          href={Astro.url.origin + props.path}
        />
      ))
    }
  </head>
  <body>
    <slot />
  </body>
</html>
