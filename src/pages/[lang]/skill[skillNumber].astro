---
import { skillsData } from "../../data/skills";
import { getStaticLangPaths } from "../../routing/lang";
import SkillHeading from "../../components/skill/SkillHeading.astro";
import Layout from "../../layouts/Layout.astro";
import HeadedSection from "../../layouts/sections/HeadedSection.astro";
import WavedSection from "../../layouts/sections/WavedSection.astro";
import Team from "../../components/team/Team.astro";
import { Trans } from "astro-i18next/components";
import Link from "../../components/Link.astro";
import TimeLine from "../../components/timeline/TimeLine.astro";
import { t } from "i18next";

export const getStaticPaths = () =>
  getStaticLangPaths().map((langPrams) =>
    Object.keys(skillsData).map((skillNumber) => ({
      params: { ...langPrams.params, skillNumber },
    }))
  );

const { skillNumber, skillName, img, nationalTeam, timelineEntries } =
  skillsData[Astro.params.skillNumber as keyof typeof skillsData];
---

<Layout title={skillName}>
  <main>
    <SkillHeading skillNumber={skillNumber} skillName={skillName} img={img} />
    <HeadedSection
      title={t("skills.general.title")}
      subtitle={t("skills.general.subtitle")}
    />
    <WavedSection type={"top"} title={t("skills.upcoming.title")}>
      <div>Events here</div>
    </WavedSection>
    <WavedSection
      type={"bottom"}
      title={t("skills.nationalTeam.title")}
      subtitle={nationalTeam.length ? t("skills.nationalTeam.subtitle") : null}
    >
      {
        nationalTeam.length ? (
          <Team members={nationalTeam} />
        ) : (
          <div>
            <Trans i18nKey={"skills.nationalTeam.noTeam"}>
              There is currently no national team.{" "}
              <Link href="#">Apply now!</Link>
            </Trans>
          </div>
        )
      }
    </WavedSection>
    <WavedSection type={"top"} title={t("skills.history")}>
      <TimeLine entries={timelineEntries} />
    </WavedSection>
  </main>
</Layout>
